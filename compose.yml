name: carhive

services:
   cache:
      image: redis:alpine
      volumes: [ cache-data:/data ]
      ports: [ "6379:6379" ]

   proxy:
      image: nginx:alpine
      environment: { }
      volumes:
         - ./conf/nginx/nginx.conf:/etc/nginx/nginx.conf
      networks: [ carhive-network ]
      ports: [ "8080:80" ]
      depends_on:
         - gateway

   gateway:
      build:
         context: services/node/gateway
      depends_on:
         - account-service
      networks: [ carhive-network ]
      ports: [ "3004:3000" ]
      init: true
      env_file: [ services/node/gateway/.env.production ]

   account-db:
      image: postgres:17-alpine
      environment:
         POSTGRES_DB: account_db
         POSTGRES_USER: ${ACCOUNT_DB_USER}
         POSTGRES_PASSWORD: ${ACCOUNT_DB_PASSWORD}
      ports: [ "5433:5432" ]
      networks: [ carhive-network ]
      volumes: [ account-db-data:/var/lib/postgresql/data ]

   listing-db:
      image: postgres:17-alpine
      environment:
         POSTGRES_DB: listing_db
         POSTGRES_USER: ${LISTING_DB_USER}
         POSTGRES_PASSWORD: ${LISTING_DB_PASSWORD}
      ports: [ "5434:5432" ]
      networks: [ carhive-network ]
      volumes: [ listing-db-data:/var/lib/postgresql/data ]

   account-service:
      build:
         context: services/node/account-service
      depends_on:
         - account-db
      networks: [ carhive-network ]
      ports: [ "3001:3000" ]
      init: true
      env_file: [ services/node/account-service/.env.production ]
      healthcheck:
         &nodejs-healthcheck
         test: [
            "CMD", "curl", "-X", "GET", "http://localhost:3000/api/v1/health",
            "-H", "accept: application/json", "-H", "X-API-KEY: ${API_KEY}"
         ]
         interval: 30s
         timeout: 2s
         retries: 3
         start_period: 10s

   listing-service:
      build:
         context: services/node/listing-service
      depends_on:
         - listing-db
      ports: [ "3002:3000" ]
      networks: [ carhive-network ]
      env_file: [ services/node/listing-service/.env.production ]
      healthcheck: *nodejs-healthcheck

   scraping-service:
      build:
         context: services/node/scraping-service
      ports: [ "3003:3000" ]
      networks: [ carhive-network ]
      env_file: [ services/node/scraping-service/.env.production ]
      healthcheck: *nodejs-healthcheck

volumes:
   cache-data: { }
   account-db-data: { }
   listing-db-data: { }

networks:
   carhive-network: { }
